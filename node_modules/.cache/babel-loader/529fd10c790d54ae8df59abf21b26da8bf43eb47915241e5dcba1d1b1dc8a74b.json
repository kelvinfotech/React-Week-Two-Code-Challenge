{"ast":null,"code":"import React,{Component}from\"react\";import BotCollection from'./BotCollection';import BotArmy from'./YourBotArmy';import BotSpecs from'../components/BotSpecs';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class BotsPage extends Component{constructor(){super(...arguments);this.state={botCollection:[],filteredCollection:[],botArmy:[],collectionVisible:true,botSpecs:{}};this.addToArmy=bot=>{const newCollection=this.state.filteredCollection.filter(card=>card.bot_class!==bot.bot_class);this.setState({filteredCollection:newCollection,botArmy:[...this.state.botArmy,bot],collectionVisible:true});};this.removeFromArmy=bot=>{const newArmy=this.state.botArmy.filter(card=>card.id!==bot.id);const armyClasses=newArmy.map(bot=>bot.bot_class);const newCollection=this.state.botCollection.filter(bot=>{console.log(\"Filter:\",!armyClasses.includes(bot.bot_class));return!armyClasses.includes(bot.bot_class);});console.log(\"newCollection\",newCollection);this.setState({botArmy:newArmy,filteredCollection:newCollection});};this.removeBotPermanently=bot=>{let newCollection=this.state.botCollection.filter(card=>card!==bot);let newFilteredCollection=this.state.filteredCollection.filter(card=>card!==bot);let newArmy=this.state.botArmy.filter(card=>card!==bot);this.setState({botCollection:newCollection,filteredCollection:newFilteredCollection,botArmy:newArmy});fetch(\"http://localhost:6001/bots/\".concat(bot.id),{method:'DELETE'}).then(response=>response.json()).then(result=>console.log(result));};this.displayBotSpecs=bot=>{this.setState({collectionVisible:false,botSpecs:bot});};this.displayBotCollection=()=>{this.setState({collectionVisible:true});};}componentDidMount(){fetch('http://localhost:6001/bots').then(response=>response.json()).then(bots=>this.setState({botCollection:bots,filteredCollection:bots})).then(console.log(\"Bots Fetched!\"));}render(){const{filteredCollection,botArmy,botSpecs,collectionVisible}=this.state;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(BotArmy,{bots:botArmy,action:this.removeFromArmy,removeCard:this.removeBotPermanently}),collectionVisible?/*#__PURE__*/_jsx(BotCollection,{botCollection:filteredCollection,action:this.displayBotSpecs,removeCard:this.removeBotPermanently}):/*#__PURE__*/_jsx(BotSpecs,{bot:botSpecs,back:this.displayBotCollection,enlist:this.addToArmy})]});}}export default BotsPage;","map":{"version":3,"names":["React","Component","BotCollection","BotArmy","BotSpecs","jsx","_jsx","jsxs","_jsxs","BotsPage","constructor","arguments","state","botCollection","filteredCollection","botArmy","collectionVisible","botSpecs","addToArmy","bot","newCollection","filter","card","bot_class","setState","removeFromArmy","newArmy","id","armyClasses","map","console","log","includes","removeBotPermanently","newFilteredCollection","fetch","concat","method","then","response","json","result","displayBotSpecs","displayBotCollection","componentDidMount","bots","render","children","action","removeCard","back","enlist"],"sources":["/Users/mac/Desktop/React-Week-Two-Code-Challenge/src/containers/BotsPage.js"],"sourcesContent":["import React, { Component } from \"react\"\nimport BotCollection from './BotCollection'\nimport BotArmy from './YourBotArmy'\nimport BotSpecs from '../components/BotSpecs'\n\nclass BotsPage extends Component {\n  state = {\n    botCollection: [],\n    filteredCollection: [],\n    botArmy: [],\n    collectionVisible: true,\n    botSpecs: {},\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:6001/bots')\n      .then(response => response.json())\n      .then(bots => this.setState({ botCollection: bots, filteredCollection: bots }))\n      .then(console.log(\"Bots Fetched!\"))\n  }\n\n  addToArmy = (bot) => {\n    const newCollection = this.state.filteredCollection.filter(card => card.bot_class !== bot.bot_class)\n    this.setState({\n      filteredCollection: newCollection,\n      botArmy: [...this.state.botArmy, bot],\n      collectionVisible: true,\n    })\n  }\n\n  removeFromArmy = (bot) => {\n    const newArmy = this.state.botArmy.filter(card => card.id !== bot.id)\n    const armyClasses = newArmy.map(bot => bot.bot_class)\n    const newCollection = this.state.botCollection.filter(bot => {\n      console.log(\"Filter:\", !armyClasses.includes(bot.bot_class))\n      return !armyClasses.includes(bot.bot_class)\n    })\n    console.log(\"newCollection\", newCollection)\n\n    this.setState({ botArmy: newArmy, filteredCollection: newCollection })\n  }\n\n  removeBotPermanently = (bot) => {\n    let newCollection = this.state.botCollection.filter(card => card !== bot)\n    let newFilteredCollection = this.state.filteredCollection.filter(card => card !== bot)\n    let newArmy = this.state.botArmy.filter(card => card !== bot)\n\n    this.setState({ botCollection: newCollection, filteredCollection: newFilteredCollection, botArmy: newArmy })\n\n    fetch(`http://localhost:6001/bots/${bot.id}`, {\n      method: 'DELETE'\n    }).then(response => response.json())\n      .then(result => console.log(result))\n  }\n\n  displayBotSpecs = (bot) => {\n    this.setState({ collectionVisible: false, botSpecs: bot })\n  }\n\n  displayBotCollection = () => {\n    this.setState({ collectionVisible: true })\n  }\n\n  render() {\n    const { filteredCollection, botArmy, botSpecs, collectionVisible } = this.state\n\n    return (\n      <div>\n        <BotArmy\n          bots={botArmy}\n          action={this.removeFromArmy}\n          removeCard={this.removeBotPermanently} />\n        {collectionVisible\n          ? < BotCollection\n            botCollection={filteredCollection}\n            action={this.displayBotSpecs}\n            removeCard={this.removeBotPermanently} />\n          : < BotSpecs\n            bot={botSpecs}\n            back={this.displayBotCollection}\n            enlist={this.addToArmy} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default BotsPage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}